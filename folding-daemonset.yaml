# apiVersion: scheduling.k8s.io/v1
# kind: PriorityClass
# metadata:
#   name: low-priority-class
# value: 10
# globalDefault: false
# description: "This priority class should be used for low priority fah pods only."
# ---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fah
  labels:
    app: fah  
spec:
  selector:
      matchLabels:
        app: fah
  template:
    metadata:
      labels:
        app: fah
    spec:
      # tolerations:
      # # This toleration is to have the daemonset runnable on master nodes
      # # uncomment this section if your masters can run pods
      # - key: node-role.kubernetes.io/master
      #   effect: NoSchedule
      containers:
        - name: fah-cpu
          image: "czero/fah:latest"
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - 'tail -n 1 log.txt | grep -v ''Exception: Could not get an assignment'''
            failureThreshold: 1
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          # --run-as UID should match runAsUser value in containers securityContext
          command:
            - "/usr/bin/FAHClient"
            - "--config"
            - "/var/lib/fahclient/config.xml"
            - "--config-rotate=false"
            - "--run-as"
            - "1234"
            - "--pid-file=/var/lib/fahclient/fahclient.pid"
            - "--gpu=true"
          resources:
            limits:
              cpu: 6500m # How much CPU you wish to donate per node
              memory: 512Mi
              # nvidia.com/gpu: "1"
            requests:
              cpu: 100m
              memory: 256Mi
              # nvidia.com/gpu: "1"
          # Make the container harder to break out of or exploit
          securityContext:
            runAsNonRoot: true
            runAsUser: 1234
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /var/lib/fahclient
              name: fahclient
      # We make an emptyDir to mount on the work directory /var/lib/fahclient
      # so we can make the rest of the container's root filesystem read-only
      volumes:
        - name: fahclient
          emptyDir: {}
        # Uncomment if using ConfigMap config.xml
        - name: fah-cpu-config
          configMap:
            name: foldingathome-config
      initContainers:
        - name: copy-config
          imagePullPolicy: Always
          image: "czero/fah:latest"
          command:
            - "sh"
            - "-c"
            # - "cp /etc/fahclient/config.xml /var/lib/fahclient/config.xml"
            # Use this cp command instead if using ConfigMap config.xml
            - "cp /etc/fahclient-config/config.xml /var/lib/fahclient/config.xml"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1234
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /var/lib/fahclient
              name: fahclient
            # Uncomment if using ConfigMap config.xml
            - name: fah-cpu-config
              mountPath: /etc/fahclient-config
      # priorityClassName: low-priority-class
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: foldingathome-config
data:
  config.xml: |
    <config>
      <!--
        To set your user name, team and passkey just edit the text
        in quotes below.
      -->

      <!-- User Information -->
      <user value="Customer0"/> <!-- Enter your user name here -->
      <team value="52737"/>         <!-- Your team number -->
      <passkey value=""/>       <!-- 32 hexadecimal characters if provided -->

      <power value="full"/>     <!-- Throttling this at K8s level -->
      <gpu value="false"/>      <!-- If true, attempt to autoconfigure GPUs -->
      <fold-anon value="false"/>

      <!-- Folding Slots
        No folding slot configuration is necessary.  The client will
        automaticlaly choose a good configuration for you.  However, here
        are some examples:
      
          <slot id="0" type="CPU"/>

        or
        
          <slot id="0" type="CPU"/>
          <slot id="1" type="GPU"/>

        All slots in a configuration MUST have unique ids.
      -->
    </config>
---
